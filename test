import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Random;
import java.util.Scanner;
public class Company {
    ProfitMargin profitMargin = new ProfitMargin();
    private String username;
    public static Customer [] c;
    public static Employee [] e;
    public static Sales [] s;
    public static Vehicle []v;  

    public Company() {
    }
    
    public boolean validateSecretKey(String enteredKey) {
        String secretKey = "leeCars";
        return secretKey.equals(enteredKey);
    }
    
    public static String employeeIDGenerator() {
        int i = 0;
        String line = "", ID = "";
        String[] num = null;
        String[] id = new String[4];
        int cnt = id.length - 1;
        
        try {
            BufferedReader inputStream = new BufferedReader(new FileReader("employee.csv"));
            while ((line = inputStream.readLine()) != null){
                i++;
            }
            num = String.valueOf(i).split("");
            
            // To put last digit of num to last digit of id
            for (int j = num.length - 1; j >= 0; j--, cnt--) {
                id[cnt] = num[j];
            }
            
            //assign null array with zero
            for (int j = 0; j < id.length; j++) {
                if (id[j] == null) {
                    id[j] = "0";
                }
            }
            
            for (String j: id) {
                ID += j;
            }
            inputStream.close();
        }catch (FileNotFoundException fnfe) {
            fnfe.printStackTrace();
        }catch (IOException ioe) {
            ioe.printStackTrace();
        }
        return "E" + ID;
    }
    
    public void registerEmployee(String name, String username, String password) {
        try {
            PrintWriter outputStream = new PrintWriter(new FileOutputStream("employee.csv", true));
            outputStream.printf("%s,%s,%s,%s\n", username, name, "0", password);
            outputStream.close();
        }catch (IOException ioe) {
            ioe.printStackTrace();
        }
        System.out.println("\nEmployee " + name + " registered successfully");
    }

    public void login(String username, String password) {
        this.username=username;
        String line = "";
        String[] row = null;
        try {
            BufferedReader inputStream = new BufferedReader(new FileReader("employee.csv"));
            while ((line = inputStream.readLine()) != null){
                row = line.split(",");
                if (row[0].equals(username) && row[3].equals(password)) {
                    System.out.printf("\nWelcome, %s!!!\nAccess Level: %s\n", row[1], row[2].equals("0") ? "Sales" : "Management");
                    inputStream.close();
                    if (row[2].equals("0")) {
                        performLoggedInActions0();
                    }
                    else {
                        performLoggedInActions1();
                    }
                    return;
                }
            }
            System.out.println("Invalid username or password. Please try again");
            inputStream.close();
        }catch (FileNotFoundException fnfe) {
            fnfe.printStackTrace();
        }catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }
    
    private void performLoggedInActions0() {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\nLogged In Actions:");
            System.out.println("1. View All Vehicle Data\n2. View Sales Record\n3. View Customer Data\n4. Search By Keyword\n5. Log Out");
            System.out.print("Enter your choice: ");
            String choice = scanner.next();

            switch (choice) {
                case "1":
                    System.out.println("\nPerforming action...");
                    ViewInfo.displayAllVehicleData();
                    break;
                case "2":
                    System.out.println("\nPerforming action...");
                    ViewInfo.displayOwnSalesRecords(username);
                    break;
                case "3":
                    System.out.println("\nPerforming action...");
                    ViewInfo.displayOwnCustomerData(username);
                    break;
                case "4":
                    Filter f=new Filter();
                    f.filterForSalesLevel(username);
                    break;
                case "5":
                    System.out.println("Logging out.");
                    return;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
    
    private void performLoggedInActions1() {
        while (true) {
            String []selection={"0","0","0","0"};
            Scanner scanner = new Scanner(System.in);
            System.out.println("\nLogged In Actions:");
            System.out.println("1. Profit Margin\n
                                2. Import Data\n
                                3. Add Employee\n
                                4. View Customer Data\n
                                5. View Employee Data\n
                                6. View Vehicle Data\n
                                7. View Sales Record\n
                                8. Search By Keyword\n
                                9. Log Out
                                ");
            System.out.print("Enter your choice: ");
            String choice = scanner.next();

            switch (choice) {
                case "1":
                    System.out.print("Year of profit margin: ");
                    String year = scanner.next();
                    profitMargin.calculator(year);
                    break;
                case "2":
                    String []selection=new String[4];
                    System.out.println("\nEnter 1 for importing data [customer/employee/sales/vehicle],four rounds required : ");
                    for(int i=0;i<4;i++)
                        selection[i]=scanner.next();
                    ImportData im=new ImportData();
                    c=im.importCustomer(selection[0]);
                    e=im.importEmployee(selection[1]);
                    s=im.importSales(selection[2]);
                    v=im.importVehicle(selection[3]);
                    System.out.println("Import data done.");
                    break;
                case "3":
                    if(!selection[1].equals("1")){
                    e=importEmployee("1");
                    }
                    addManagement();
                    break;
                case "4":
                    ViewInfo.displayAllCustomerData();
                    break;

                case "5":
                    ViewInfo.displayAllEmployeeData();
                    break;

                case "6":
                    ViewInfo.displayAllVehicleData();
                    break;

                case "7":
                    ViewInfo.displayAllSalesRecords();
                    break;
                case "8":
                    Filter f=new Filter();
                    f.filterForManagementLevel();
                    break;
                case "9":
                    System.out.println("Logging Out...");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
    public String passwordGenerator(){
         String upper="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
         String lower="abcdefghijklmnopqrstuvwxyz";
         String specialChars="<>.?/{}[]+-_()-*&^%$#@!";
         String num="0123456789";
         String combination=upper+lower+specialChars+num;
         char [] password=new char [8];
         Random r=new Random();
         for (int i=0;i<8;i++){
            password[i]=combination.charAt(r.nextInt(combination.length()));
         }
         return new String (password);
    }
    public void addManagement(){
        StringBuilder sb=new StringBuilder();
        String eid=employeeIDGenerator();
        sb.append(eid);
        Scanner in=new Scanner(System.in);
        Scanner scanner=new Scanner(System.in);
        System.out.println("\n--Adding employee--");
        System.out.println("Please enter name : ");
        String name=in.nextLine();
        System.out.println("Please set the employee status (0 for sales level and 1 for management level ) : ");
        int status=scanner.nextInt();
        String pass =passwordGenerator();
        sb.append(","+name+","+status+","+pass);
            try{
                PrintWriter pw=new PrintWriter(new FileOutputStream("employee.csv",true));
                pw.println(sb.toString());
                pw.close();
                System.out.println("Employee added.");
            }
            catch(IOException ioe){
                System.out.printf("ERROR - A %s occurred:\n%s\n",ioe.getClass().toString(),ioe.getMessage());
            }  
        e[Employee.record]=new Employee(eid,name,Integer.toString(status),pass);
        }
}
    
